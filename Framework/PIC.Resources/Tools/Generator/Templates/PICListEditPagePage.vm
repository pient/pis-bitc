##FILENAME:${table.GetClassName()}ListEdit.aspx
##
## Castle ActiveRecord ListEditPage
##

<%@ Page Title="标题" Language="C#" AutoEventWireup="true" CodeBehind="${table.GetClassName()}ListEdit.aspx.cs" Inherits="${namespace}.Web.${table.GetClassName()}ListEdit" %>

<asp:Content ID="HeadContent" ContentPlaceHolderID="HeadHolder" runat="server">

<script type="text/javascript">
    var EditWinStyle = CenterWin("width=650,height=600,scrollbars=yes");
    var EditPageUrl = "${table.GetClassName()}Edit.aspx";
    
    var store, myData;
    var pgBar, schBar, tlBar, titPanel, grid, viewport;

    function onPgLoad() {
        setPgUI();
    }

    function setPgUI() {

        // 表格数据
        myData = {
            total: PICSearchCrit["RecordCount"],
            records: PICState["${table.GetClassName()}List"] || []
        };

        // 表格数据源
        store = new Ext.ux.data.PICJsonStore({
            dsname: '${table.GetClassName()}List',
            idProperty: '${table.GetPKField().Column_Name}',
            data: myData,
            fields: [
#set ($i = 0)
#foreach ($f in $fields)
#set ($i = $i+1)
#if($i==$fields.length)
			{ name: '${f.GetPropertyName()}' }
#else
			{ name: '${f.GetPropertyName()}' },
#end
#end
			]
        });

        // 分页栏
        pgBar = new Ext.ux.PICPagingToolbar({
            pageSize: PICSearchCrit["PageSize"],
            store: store
        });

        // 搜索栏
        schBar = new Ext.ux.PICSchPanel({
			store: store,
            items: [
                { fieldLabel: '名称', id: 'Name', schopts: { qryopts: "{ mode: 'Like', field: 'Name' }"} },
                { fieldLabel: '编码', id: 'Code', schopts: { qryopts: "{ mode: 'Like', field: 'Code' }"} },
                { fieldLabel: '创建人', id: 'CreatorName', schopts: { qryopts: "{ mode: 'Like', field: 'CreatorName' }"} }]
            });

            // 工具栏
            tlBar = new Ext.ux.PICToolbar({
                items: [{
                    text: '保存',
                    iconCls: 'pic-icon-save',
                    handler: function() {
                        // 保存修改的数据
						var recs = store.getModifiedRecords();
						if (recs && recs.length > 0) {
                            var dt = store.getModifiedDataStringArr(recs) || [];

                            jQuery.ajaxExec('batchsave', { "data": dt }, function() {
                                store.commitChanges();

                                PICDlg.show("保存成功！");
                            });
                        }
                    }
                }, '-', { 
					text: '导出Excel', 
					iconCls: 'pic-icon-xls', 
					handler: function() {
                        ExtGridExportExcel(grid, { store: null, title: '标题' });
                    }
                }, '->', { text: '查询:' },
                new Ext.app.PICSearchField({ store: store, schbutton: true, qryopts: "{ type: 'fulltext' }" }),
                '-',
                {
                    text: '复杂查询',
                    iconCls: 'pic-icon-search',
                    handler: function() {
                        schBar.toggleCollapse(false);

                        setTimeout("viewport.doLayout()", 50);
                    }
}]
                });

                // 工具标题栏
                titPanel = new Ext.ux.PICPanel({
                    tbar: tlBar,
                    items: [schBar]
                });

                // 表格面板
                grid = new Ext.ux.grid.PICEditorGridPanel({
                    store: store,
                    clicksToEdit: 2,
                    region: 'center',
                    autoExpandColumn: 'Name',
                    columns: [
                    new Ext.ux.grid.PICRowNumberer(),
                    new Ext.ux.grid.PICCheckboxSelectionModel(),
					{ id: 'Code', dataIndex: 'Code', header: '编号', width: 100, editor: { xtype: 'textfield' }, sortable: true },
					{ id: 'Name', dataIndex: 'Name', header: '名称', width: 100, editor: { xtype: 'textfield' }, sortable: true },
					{ id: 'CreatorName', dataIndex: 'CreatorName', header: '创建人', width: 100,  sortable: true },
					{ id: 'CreatedDate', dataIndex: 'CreatedDate', header: '创建日期', width: 100, editor: { xtype: 'datefield' }, renderer: ExtGridDateOnlyRender,  sortable: true }
                    ],
                    bbar: pgBar,
                    tbar: titPanel
                });

                // 页面视图
                viewport = new Ext.ux.PICViewport({
                    items: [{ xtype: 'box', region: 'north', applyTo: 'pic-page-header', height: 30 }, grid]
                });
            }

            // 提交数据成功后
            function onExecuted() {
                store.reload();
            }
    
    </script>

</asp:Content>
<asp:Content ID="BodyContent" ContentPlaceHolderID="BodyHolder" runat="server">
    <div id="pic-page-header" class="pic-page-header" style="display:none;"><h1>标题</h1></div>
</asp:Content>

