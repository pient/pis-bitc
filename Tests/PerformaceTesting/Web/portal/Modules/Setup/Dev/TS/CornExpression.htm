<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <style type="text/css">

h1, h2, h3
{
	color: #06C;
	padding-top: 6px;
	padding-bottom: 10px;
}
*
{
	margin: 0;
	padding: 0;
}
p, cite, code, ul
{
	font-size: 1.2em;
	padding-bottom: 1.2em;
}
.content li
{
	margin-left: 18px;
}

code
{
	    border-right: 1px solid #F0F0F0;
            border-top: 1px solid #F0F0F0;
            border-bottom: 1px solid #F0F0F0;
            border-left: 6px solid #39F;
            color: #555;
	        display: block;
	        font: normal 1.1em "Lucida Sans Unicode" ,serif;
	        margin-bottom: 12px;
	        padding: 8px 10px;
	        white-space: pre;
}
    </style>
</head>
<body>

    <h2>
        Cron Expressions
    </h2>
    <p>
        Cron-Expressions are used to configure instances of CronTrigger. 
        Cron-Expressions are strings that are actually made up of seven sub-expressions, 
        that describe individual details of the schedule. These sub-expression are 
        separated with white-space, and represent:
    </p>
    <ol>
        <li>1. Seconds </li>
        <li>2. Minutes </li>
        <li>3. Hours </li>
        <li>4. Day-of-Month </li>
        <li>5. Month </li>
        <li>6. Day-of-Week </li>
        <li>7. Year (optional field) </li>
    </ol>
    <p>
        An example of a complete cron-expression is the string &quot;0 0 12 ? * WED&quot; - which 
        means &quot;every Wednesday at 12:00 pm&quot;.
    </p>
    <p>
        Individual sub-expressions can contain ranges and/or lists. For example, the day 
        of week field in the previous (which reads &quot;WED&quot;) example could be replaces with 
        &quot;MON-FRI&quot;, &quot;MON, WED, FRI&quot;, or even &quot;MON-WED,SAT&quot;.
    </p>
    <p>
        Wild-cards (the &#39;*&#39; character) can be used to say &quot;every&quot; possible value of this 
        field. Therefore the &#39;*&#39; character in the &quot;Month&quot; field of the previous example 
        simply means &quot;every month&quot;. A &#39;*&#39; in the Day-Of-Week field would obviously mean 
        &quot;every day of the week&quot;.
    </p>
    <p>
        All of the fields have a set of valid values that can be specified. These values 
        should be fairly obvious - such as the numbers 0 to 59 for seconds and minutes, 
        and the values 0 to 23 for hours. Day-of-Month can be any value 0-31, but you 
        need to be careful about how many days are in a given month! Months can be 
        specified as values between 0 and 11, or by using the strings JAN, FEB, MAR, 
        APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV and DEC. Days-of-Week can be specified as 
        vaules between 1 and 7 (1 = Sunday) or by using the strings SUN, MON, TUE, WED, 
        THU, FRI and SAT.
    </p>
    <p>
        The &#39;/&#39; character can be used to specify increments to values. For example, if 
        you put &#39;0/15&#39; in the Minutes field, it means &#39;every 15 minutes, starting at 
        minute zero&#39;. If you used &#39;3/20&#39; in the Minutes field, it would mean &#39;every 20 
        minutes during the hour, starting at minute three&#39; - or in other words it is the 
        same as specifying &#39;3,23,43&#39; in the Minutes field.
    </p>
    <p>
        The &#39;?&#39; character is allowed for the day-of-month and day-of-week fields. It is 
        used to specify &quot;no specific value&quot;. This is useful when you need to specify 
        something in one of the two fields, but not the other. See the examples below 
        (and CronTrigger API documentation) for clarification.
    </p>
    <p>
        The &#39;L&#39; character is allowed for the day-of-month and day-of-week fields. This 
        character is short-hand for &quot;last&quot;, but it has different meaning in each of the 
        two fields. For example, the value &quot;L&quot; in the day-of-month field means &quot;the last 
        day of the month&quot; - day 31 for January, day 28 for February on non-leap years. 
        If used in the day-of-week field by itself, it simply means &quot;7&quot; or &quot;SAT&quot;. But if 
        used in the day-of-week field after another value, it means &quot;the last xxx day of 
        the month&quot; - for example &quot;6L&quot; or &quot;FRIL&quot; both mean &quot;the last friday of the 
        month&quot;. When using the &#39;L&#39; option, it is important not to specify lists, or 
        ranges of values, as you&#39;ll get confusing results.
    </p>
    <p>
        The &#39;W&#39; is used to specify the weekday (Monday-Friday) nearest the given day. As 
        an example, if you were to specify &quot;15W&quot; as the value for the day-of-month 
        field, the meaning is: &quot;the nearest weekday to the 15th of the month&quot;.
    </p>
    <p>
        The &#39;#&#39; is used to specify &quot;the nth&quot; XXX weekday of the month. For example, the 
        value of &quot;6#3&quot; or &quot;FRI#3&quot; in the day-of-week field means &quot;the third Friday of 
        the month&quot;.
    </p>
    <h2>
        Example Cron Expressions
    </h2>
    <p>
        Here are a few more examples of expressions and their meanings - you can find 
        even more in the API documentation for CronTrigger
    </p>
    <strong>CronTrigger Example 1 - an expression to create a trigger that simply 
    fires every 5 minutes </strong><code>&quot;0 0/5 * * * ?&quot; </code><strong>CronTrigger 
    Example 2 - an expression to create a trigger that fires every 5 minutes, at 10 
    seconds after the minute (i.e. 10:00:10 am, 10:05:10 am, etc.). </strong><code>
    &quot;10 0/5 * * * ?&quot; </code><strong>CronTrigger Example 3 - an expression to create 
    a trigger that fires at 10:30, 11:30, 12:30, and 13:30, on every Wednesday and 
    Friday. </strong><code>&quot;0 30 10-13 ? * WED,FRI&quot; </code><strong>CronTrigger 
    Example 4 - an expression to create a trigger that fires every half hour between 
    the hours of 8 am and 10 am on the 5th and 20th of every month. Note that the 
    trigger will NOT fire at 10:00 am, just at 8:00, 8:30, 9:00 and 9:30 </strong>
    <code>&quot;0 0/30 8-9 5,20 * ?&quot; </code>
    <p>
        Note that some scheduling requirements are too complicated to express with a 
        single trigger - such as &quot;every 5 minutes between 9:00 am and 10:00 am, and 
        every 20 minutes between 1:00 pm and 10:00 pm&quot;. The solution in this scenario is 
        to simply create two triggers, and register both of them to run the same job.
    </p>

</body>
</html>
